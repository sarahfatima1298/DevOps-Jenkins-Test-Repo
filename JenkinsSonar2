def artifactname = "devops-snow-build-app.jar"
def repoName = "JenkinsDevOpsProject"
def pipelineName = "SunilPipelines/Sunil-Scripted-Pipeline-Sonar"
def semanticVersion = "${env.BUILD_NUMBER}.0.0"
def packageName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def version = "${env.BUILD_NUMBER}.0"
def pkgName = "devops-snow-build-pkg_${env.BUILD_NUMBER}"
def changeRequestNumber = "null"
def buildNo ="${env.BUILD_NUMBER}"
def currStageName = "none"

pipeline {
  agent any
  tools {
       maven 'rama01Maven'
   }
   /*environment {
	 SCANNER_HOME = tool 'sonarcloud.io'
	}  */
  stages {
       stage('Build !@') {
           steps {
              
              sh 'mvn -B -DskipTests clean compile'
	     // snDevOpsChange(ignoreErrors:false)
	     // sonarSummaries()

           }
       }
       stage('Test') {
           steps {
                sonarSummaries()
	      // snDevOpsSecurityResult securityResultAttributes: "{'scanner': 'Veracode','applicationName': 'VeraDemo10', 'securityToolId' : ''}"
              sh 'mvn test'
           }
           post {
             always {
                junit "**/target/surefire-reports/*.xml"
             }
           }
       }
    /*  stage('Deploy Stage') {
                 steps {
                    
                    echo 'Deploying the change....'
		  //  snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
           	    //snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
		  //  snDevOpsChange changeRequestDetails: '{ "attributes": { "type": "Emergency", "standard_change_template": "62d10fa1c303101035ae3f52c1d3aec1"}}'
		     // snDevOpsChange changeCreationTimeOut: 3600, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2021-02-05 08:00:00", "end_date": "2022-04-05 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 18000, pollingInterval: 30
                     // sonarSummaries()
                   //  snDevOpsSecurityResult securityResultAttributes: "{'scanner': 'Veracode','applicationName': 'PetStoreAPI-Github', 'securityToolId' : '8462c9c6c32f351027b51185e001311c'}"
		    // snDevOpsChange()	
                    // snDevOpsChange changeRequestDetails: '{ "attributes": {"chg_model": "adffaa9e4370211072b7f6be5bb8f2ed"}}',
		     changeRequestNumber = snDevOpsGetChangeNumber(changeDetails: """{"build_number":"${env.BUILD_NUMBER}"}""")
		     echo "${changeRequestNumber}"
		     snDevOpsUpdateChangeInfo(changeRequestDetails: """{"close_code": "successful", "state": "3", "close_notes": "Deployment to PROD was successful test 123", "short_description": "Test description in Get_Change Step by", "priority": "1", "justification": "test justification", "description": "test description",  "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "Update of change request through Update API"}""", changeRequestNumber: """${changeRequestNumber}""")
		
                 
          }        
      }
   }
}*/
stage('Deploy') {
            steps {
		script{
		//sh 'mvn -B package --file pom.xml'    
                echo 'Running deploy stage' 
	       // snDevOpsSecurityResult configurationName: "DevOps-devopsqevancouver002.service-now.com-1709901502633",securityResultAttributes: "{'scanner': 'Veracode','applicationName': 'PetStoreAPI-Github', 'securityToolId' : ''}"
		//snDevOpsArtifact(artifactsPayload: """{"artifacts": [{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}","semanticVersion": "1.${env.BUILD_NUMBER}.0","repositoryName": "${repoName}"}],"branchName":"master"}""")
		//snDevOpsPackage(name: "${pkgName}-${env.BUILD_NUMBER}", artifactsPayload: """{"artifacts":[{"name": "${artifactname}", "version": "1.${env.BUILD_NUMBER}", "repositoryName": "${repoName}"}], "branchName":"master"}""")
		//snDevOpsChange changeRequestDetails: '{ "attributes": {"chg_model": "adffaa9e4370211072b7f6be5bb8f2ed"}}',configurationName: 'DevOps-rpvr3.service-now.com-1709727767377'	â€ƒ	
	         snDevOpsChange changeRequestDetails: '{ "attributes": {"chg_model": "007c4001c343101035ae3f52c1d3aeb2"}}'
		//snDevOpsChange()
		stageName = "Deploy"
		changeRequestNumber = snDevOpsGetChangeNumber(changeDetails: """{"stage_name":"${stageName}"}""")
		 //changeRequestNumber = snDevOpsGetChangeNumber changeDetails: """{ "pipeline_name": "Riya_Scripted2", "build_number": "${buildNo}", "stage_name": "Deploy", "branch_name": "master"}"""
	       // snDevOpsChange changeCreationTimeOut: 3600, changeRequestDetails: '{ "attributes": { "short_description": "Test description", "priority": "1", "start_date": "2024-01-11 08:00:00", "end_date": "2024-01-11 08:00:00", "justification": "test justification", "description": "test description", "cab_required": true, "comments": "This update for work notes is from jenkins file", "work_notes": "test work notes", "assignment_group": "a715cd759f2002002920bde8132e7018" }, "setCloseCode": false }', changeStepTimeOut: 18000, pollingInterval: 30
		echo "${changeRequestNumber}"
		/*snDevOpsUpdateChangeInfo(changeRequestDetails: 
                        """{
			    "close_code": "successful",
			    "state": "3", 
			    "close_notes": "Deployment to PROD was successful test 123",
                            "short_description": "Short description updated to Test description in ${currStageName} Step by ${env.BUILD_NUMBER}",
                            "priority": "1",
                            "start_date": "2021-02-05 08:00:00",
                            "end_date": "2022-12-25 08:00:00",
                            "justification": "test justification",
                            "description": "test description",
                            "cab_required": true,
                            "comments": "This update for comments is from jenkins file",
                            "work_notes": "This update for work_notes is from jenkins file"
                        }""", 
                        changeRequestNumber: """${changeRequestNumber}""")
		 
		}*/
            }
           
        }
    }
}


 def sonarSummaries() {
	withSonarQubeEnv('sonarcloud.io'){
	   /*if(fileExists("sonar-project.properties")) {
			sh '${SCANNER_HOME}/bin/sonar-scanner'
		} else {*/
			sh 'mvn clean verify sonar:sonar \
			    -Dsonar.login=1ff462f03228674e3a684569d716aad1aff286bb \
			    -Dsonar.host.url=https://sonarcloud.io \
			    -Dsonar.organization=riyapulusuganti \
			    -Dsonar.projectKey=riyapulusuganti_Demo'
		//}
	}
	//timeout(time: 1, unit: 'MINUTES') {
		//waitForQualityGate abortPipeline: false
	//}
}
      
      
  



